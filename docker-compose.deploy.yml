version: "3.3"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "9900:80"
    networks:
      default:
        aliases:
          - frontend
    logging:
      driver: "json-file"
      options:
        max-size: "2k"
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "9003:9003"
    command: bash -c "mvn clean install && mvn spring-boot:run"
    # command: bash -c "while true; do sleep 1; done"
    volumes:
      - ./backend:/app
      - maven-repo:/root/.m2
    networks:
      default:
        aliases:
          - backend
    logging:
      driver: "json-file"
      options:
        max-size: "2k"
  db:
    build:
      context: ./db
      dockerfile: Dockerfile
    volumes:
      - db-data:/ORCL
    ports:
      - "9009:1521"
    networks:
      default:
        aliases:
          - db
    logging:
      driver: "json-file"
      options:
        max-size: "2k"
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          'echo "select ''connect-ready'' from dual;" | /u01/app/oracle/product/12.2.0/dbhome_1/bin/sqlplus -S system/Oradoc_db1@localhost/ORCLPDB1.localdomain | grep -o connect-ready | grep -c connect-ready',
        ]
      interval: 10s
      timeout: 10s
      retries: 600
  # Due to the limitations of Flyway Community Edition, it was discarded
  # flyway-init:
  #   image: flyway/flyway:6.4.1
  #   command: -url=jdbc:oracle:thin:@//db/ORCLPDB1.localdomain -user="sys as sysdba" -password=Oradoc_db1 -connectRetries=1200 repair baseline migrate
  #   volumes:
  #     - ./db/flyway/init_sql:/flyway/sql
  #   depends_on:
  #     - db
  #   networks:
  #     - default
  # flyway:
  #   image: flyway/flyway:6.4.1
  #   command: -url=jdbc:oracle:thin:@//db/ORCLPDB1.localdomain -user=atjob -password=atjob -connectRetries=1200 repair migrate
  #   volumes:
  #     - ./db/flyway/sql:/flyway/sql
  #   depends_on:
  #     - db
  #   networks:
  #     - default

  migrations:
    build:
      context: ./db/mybatis-migrations
      dockerfile: Dockerfile
    #command: /bin/sh -c "/migration/utils/wait-for-it.sh db:1521 --timeout=1200 --strict -- sleep 10 && echo \"db is up\""
    command: up
    volumes:
      - ./db/mybatis-migrations:/migration
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      default:
        aliases:
          - rabbitmq

volumes:
  db-data:
  maven-repo:

networks:
  default:
    external: false
