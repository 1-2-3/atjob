<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bzb.atjob.app.auth.core.repository.DeptMapper">
  <resultMap id="BaseResultMap" type="com.bzb.atjob.app.auth.core.entity.Dept">
    <id column="T_DEPT_ID" jdbcType="VARCHAR" property="deptId" />
    <result column="T_NAME" jdbcType="VARCHAR" property="name" />
    <result column="T_CODE" jdbcType="VARCHAR" property="code" />
    <result column="T_PARENT" jdbcType="VARCHAR" property="parent" />
    <result column="T_INPUT_CODE" jdbcType="VARCHAR" property="inputCode" />
    <result column="T_INDEX_FIELD" jdbcType="DECIMAL" property="indexField" />
    <result column="T_DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="T_IS_STOP" jdbcType="DECIMAL" property="isStop" />
    <result column="T_CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="T_CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
    <result column="T_MODIFY_USER_ID" jdbcType="VARCHAR" property="modifyUserId" />
    <result column="T_MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    T.DEPT_ID as T_DEPT_ID,
    T.NAME as T_NAME, T.CODE as T_CODE, T.PARENT as T_PARENT,
    T.INPUT_CODE as T_INPUT_CODE,
    T.INDEX_FIELD as T_INDEX_FIELD, T.DESCRIPTION as T_DESCRIPTION, T.IS_STOP as T_IS_STOP,
    T.CREATE_TIME as T_CREATE_TIME, T.CREATE_USER_ID as T_CREATE_USER_ID,
    T.MODIFY_USER_ID as T_MODIFY_USER_ID, T.MODIFY_TIME as T_MODIFY_TIME
  </sql>
  <select id="selectByExample" parameterType="com.bzb.atjob.app.auth.core.repository.DeptExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from AUTH_DEPT T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from AUTH_DEPT T
    where T.DEPT_ID = #{deptId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from AUTH_DEPT
    where DEPT_ID = #{deptId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bzb.atjob.app.auth.core.entity.Dept">
    insert into AUTH_DEPT (DEPT_ID,
      NAME, CODE,
      PARENT,
      INPUT_CODE, INDEX_FIELD, DESCRIPTION,
      IS_STOP, CREATE_TIME,
      CREATE_USER_ID, MODIFY_USER_ID, MODIFY_TIME
      )
    values (#{deptId,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
      #{parent,jdbcType=VARCHAR},
      #{inputCode,jdbcType=VARCHAR}, #{indexField,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR},
      #{isStop,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{nameEn,jdbcType=VARCHAR},
      #{createUserId,jdbcType=VARCHAR}, #{modifyUserId,jdbcType=VARCHAR}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bzb.atjob.app.auth.core.entity.Dept">
    insert into AUTH_DEPT
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="code != null">
        CODE,
      </if>
      <if test="parent != null">
        PARENT,
      </if>
      <if test="inputCode != null">
        INPUT_CODE,
      </if>
      <if test="indexField != null">
        INDEX_FIELD,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="isStop != null">
        IS_STOP,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID,
      </if>
      <if test="modifyUserId != null">
        MODIFY_USER_ID,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        #{parent,jdbcType=VARCHAR},
      </if>
      <if test="inputCode != null">
        #{inputCode,jdbcType=VARCHAR},
      </if>
      <if test="indexField != null">
        #{indexField,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isStop != null">
        #{isStop,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nameEn != null">
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserId != null">
        #{modifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bzb.atjob.app.auth.core.repository.DeptExample" resultType="java.lang.Long">
    select count(*) from AUTH_DEPT T
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bzb.atjob.app.auth.core.entity.Dept">
    update AUTH_DEPT
    <set>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        CODE = #{code,jdbcType=VARCHAR},
      </if>
      <if test="parent != null">
        PARENT = #{parent,jdbcType=VARCHAR},
      </if>
      <if test="inputCode != null">
        INPUT_CODE = #{inputCode,jdbcType=VARCHAR},
      </if>
      <if test="indexField != null">
        INDEX_FIELD = #{indexField,jdbcType=DECIMAL},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isStop != null">
        IS_STOP = #{isStop,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserId != null">
        MODIFY_USER_ID = #{modifyUserId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where DEPT_ID = #{deptId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bzb.atjob.app.auth.core.entity.Dept">
    update AUTH_DEPT
    set 
      NAME = #{name,jdbcType=VARCHAR},
      CODE = #{code,jdbcType=VARCHAR},
      PARENT = #{parent,jdbcType=VARCHAR},
      INPUT_CODE = #{inputCode,jdbcType=VARCHAR},
      INDEX_FIELD = #{indexField,jdbcType=DECIMAL},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      IS_STOP = #{isStop,jdbcType=DECIMAL},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
      MODIFY_USER_ID = #{modifyUserId,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP}
    where DEPT_ID = #{deptId,jdbcType=VARCHAR}
  </update>
</mapper>